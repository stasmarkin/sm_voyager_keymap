#pragma once
#include QMK_KEYBOARD_H



extern rgb_config_t rgb_matrix_config;

void keyboard_post_init_user(void) {
  rgb_matrix_enable();
}

const uint8_t PROGMEM ledmap[][DRIVER_LED_TOTAL][3] = {
    [L_EN] = {
              {0,0,0},       {0,0,0}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},
              {0,0,0}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},
              {0,0,0}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
                                                                    {169,255,255}, {169,255,255},

        {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},       {0,0,0},       {0,0,0},
        {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},       {0,0,0},
        {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255}, {169,255,255},       {0,0,0},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
        {169,255,255}, {169,255,255},
    },

    [L_RU] = {
              {0,0,0},       {0,0,0},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},
              {0,0,0},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},
              {0,0,0},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
                                                                      {0,231,231},   {0,231,231},

          {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},       {0,0,0},       {0,0,0},
          {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},       {0,0,0},
          {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},   {0,231,231},       {0,0,0},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
          {0,231,231},   {0,231,231},
    },

    [L_NUM] = {
              {0,0,0},       {0,0,0},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},
              {0,0,0},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},
              {0,0,0},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
                                                                     {99,245,219},  {99,245,219},

         {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},       {0,0,0},       {0,0,0},
         {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},       {0,0,0},
         {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},  {99,245,219},       {0,0,0},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
         {99,245,219},  {99,245,219},
    },

    [L_FN] = {
              {0,0,0},       {0,0,0}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},
              {0,0,0}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},
              {0,0,0}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
                                                                     {214,218,204}, {214,218,204},

        {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},       {0,0,0},       {0,0,0},
        {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},       {0,0,0},
        {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204}, {214,218,204},       {0,0,0},
              {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},       {0,0,0},
        {214,218,204}, {214,218,204},
    },

};

const int ledmap_len = sizeof(ledmap) / sizeof(ledmap[0]);


void set_layer_color(int layer) {
  if (layer < 0 || layer >= ledmap_len) {
      if (rgb_matrix_get_flags() == LED_FLAG_NONE)
        rgb_matrix_set_color_all(0, 0, 0);
      return;
  }

  for (int i = 0; i < DRIVER_LED_TOTAL; i++) {
    HSV hsv = {
      .h = pgm_read_byte(&ledmap[layer][i][0]),
      .s = pgm_read_byte(&ledmap[layer][i][1]),
      .v = pgm_read_byte(&ledmap[layer][i][2]),
    };
    if (!hsv.h && !hsv.s && !hsv.v) {
        rgb_matrix_set_color( i, 0, 0, 0 );
    } else {
        RGB rgb = hsv_to_rgb( hsv );
        float f = (float)rgb_matrix_config.hsv.v / UINT8_MAX;
        rgb_matrix_set_color( i, f * rgb.r, f * rgb.g, f * rgb.b );
    }
  }
}

void rgb_matrix_indicators_user(void) {
  if (keyboard_config.disable_layer_led) { return; }
  set_layer_color(biton32(layer_state));
}
